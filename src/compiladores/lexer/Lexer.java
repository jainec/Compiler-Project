/* This file was generated by SableCC (http://www.sablecc.org/). */

package compiladores.lexer;

import java.io.*;
import compiladores.node.*;

@SuppressWarnings("nls")
public class Lexer
{
    protected Token token;
    protected State state = State.NORMAL;

    private IPushbackReader in;
    private int line;
    private int pos;
    private boolean cr;
    private boolean eof;
    private final StringBuffer text = new StringBuffer();

    @SuppressWarnings("unused")
    protected void filter() throws LexerException, IOException
    {
        // Do nothing
    }

    public Lexer(@SuppressWarnings("hiding") final PushbackReader in)
    {
        this.in = new IPushbackReader() {

            private PushbackReader pushbackReader = in;
            
            @Override
            public void unread(int c) throws IOException {
                pushbackReader.unread(c);
            }
            
            @Override
            public int read() throws IOException {
                return pushbackReader.read();
            }
        };
    }
 
    public Lexer(@SuppressWarnings("hiding") IPushbackReader in)
    {
        this.in = in;
    }
 
    public Token peek() throws LexerException, IOException
    {
        while(this.token == null)
        {
            this.token = getToken();
            filter();
        }

        return this.token;
    }

    public Token next() throws LexerException, IOException
    {
        while(this.token == null)
        {
            this.token = getToken();
            filter();
        }

        Token result = this.token;
        this.token = null;
        return result;
    }

    protected Token getToken() throws IOException, LexerException
    {
        int dfa_state = 0;

        int start_pos = this.pos;
        int start_line = this.line;

        int accept_state = -1;
        int accept_token = -1;
        int accept_length = -1;
        int accept_pos = -1;
        int accept_line = -1;

        @SuppressWarnings("hiding") int[][][] gotoTable = Lexer.gotoTable[this.state.id()];
        @SuppressWarnings("hiding") int[] accept = Lexer.accept[this.state.id()];
        this.text.setLength(0);

        while(true)
        {
            int c = getChar();

            if(c != -1)
            {
                switch(c)
                {
                case 10:
                    if(this.cr)
                    {
                        this.cr = false;
                    }
                    else
                    {
                        this.line++;
                        this.pos = 0;
                    }
                    break;
                case 13:
                    this.line++;
                    this.pos = 0;
                    this.cr = true;
                    break;
                default:
                    this.pos++;
                    this.cr = false;
                    break;
                }

                this.text.append((char) c);

                do
                {
                    int oldState = (dfa_state < -1) ? (-2 -dfa_state) : dfa_state;

                    dfa_state = -1;

                    int[][] tmp1 =  gotoTable[oldState];
                    int low = 0;
                    int high = tmp1.length - 1;

                    while(low <= high)
                    {
                        // int middle = (low + high) / 2;
                        int middle = (low + high) >>> 1;
                        int[] tmp2 = tmp1[middle];

                        if(c < tmp2[0])
                        {
                            high = middle - 1;
                        }
                        else if(c > tmp2[1])
                        {
                            low = middle + 1;
                        }
                        else
                        {
                            dfa_state = tmp2[2];
                            break;
                        }
                    }
                }while(dfa_state < -1);
            }
            else
            {
                dfa_state = -1;
            }

            if(dfa_state >= 0)
            {
                if(accept[dfa_state] != -1)
                {
                    accept_state = dfa_state;
                    accept_token = accept[dfa_state];
                    accept_length = this.text.length();
                    accept_pos = this.pos;
                    accept_line = this.line;
                }
            }
            else
            {
                if(accept_state != -1)
                {
                    switch(accept_token)
                    {
                    case 0:
                        {
                            @SuppressWarnings("hiding") Token token = new0(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 1:
                        {
                            @SuppressWarnings("hiding") Token token = new1(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 2:
                        {
                            @SuppressWarnings("hiding") Token token = new2(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 3:
                        {
                            @SuppressWarnings("hiding") Token token = new3(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 4:
                        {
                            @SuppressWarnings("hiding") Token token = new4(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 5:
                        {
                            @SuppressWarnings("hiding") Token token = new5(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 6:
                        {
                            @SuppressWarnings("hiding") Token token = new6(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 7:
                        {
                            @SuppressWarnings("hiding") Token token = new7(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 8:
                        {
                            @SuppressWarnings("hiding") Token token = new8(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 9:
                        {
                            @SuppressWarnings("hiding") Token token = new9(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 10:
                        {
                            @SuppressWarnings("hiding") Token token = new10(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 11:
                        {
                            @SuppressWarnings("hiding") Token token = new11(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 12:
                        {
                            @SuppressWarnings("hiding") Token token = new12(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 13:
                        {
                            @SuppressWarnings("hiding") Token token = new13(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 14:
                        {
                            @SuppressWarnings("hiding") Token token = new14(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 15:
                        {
                            @SuppressWarnings("hiding") Token token = new15(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 16:
                        {
                            @SuppressWarnings("hiding") Token token = new16(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 17:
                        {
                            @SuppressWarnings("hiding") Token token = new17(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 18:
                        {
                            @SuppressWarnings("hiding") Token token = new18(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 19:
                        {
                            @SuppressWarnings("hiding") Token token = new19(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 20:
                        {
                            @SuppressWarnings("hiding") Token token = new20(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 21:
                        {
                            @SuppressWarnings("hiding") Token token = new21(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 22:
                        {
                            @SuppressWarnings("hiding") Token token = new22(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 23:
                        {
                            @SuppressWarnings("hiding") Token token = new23(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 24:
                        {
                            @SuppressWarnings("hiding") Token token = new24(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 25:
                        {
                            @SuppressWarnings("hiding") Token token = new25(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 26:
                        {
                            @SuppressWarnings("hiding") Token token = new26(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 27:
                        {
                            @SuppressWarnings("hiding") Token token = new27(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 28:
                        {
                            @SuppressWarnings("hiding") Token token = new28(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 29:
                        {
                            @SuppressWarnings("hiding") Token token = new29(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 30:
                        {
                            @SuppressWarnings("hiding") Token token = new30(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 31:
                        {
                            @SuppressWarnings("hiding") Token token = new31(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 32:
                        {
                            @SuppressWarnings("hiding") Token token = new32(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 33:
                        {
                            @SuppressWarnings("hiding") Token token = new33(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 34:
                        {
                            @SuppressWarnings("hiding") Token token = new34(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 35:
                        {
                            @SuppressWarnings("hiding") Token token = new35(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 36:
                        {
                            @SuppressWarnings("hiding") Token token = new36(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 37:
                        {
                            @SuppressWarnings("hiding") Token token = new37(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 1: state = State.COMENTARIO; break;
                                case 0: state = State.COMENTARIO; break;
                            }
                            return token;
                        }
                    case 38:
                        {
                            @SuppressWarnings("hiding") Token token = new38(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 1: state = State.COMENTARIO; break;
                            }
                            return token;
                        }
                    case 39:
                        {
                            @SuppressWarnings("hiding") Token token = new39(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 1: state = State.COMENTARIO; break;
                                case 0: state = State.COMENTARIO; break;
                            }
                            return token;
                        }
                    case 40:
                        {
                            @SuppressWarnings("hiding") Token token = new40(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 1: state = State.COMENTARIO; break;
                            }
                            return token;
                        }
                    case 41:
                        {
                            @SuppressWarnings("hiding") Token token = new41(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 1: state = State.COMENTARIO; break;
                            }
                            return token;
                        }
                    case 42:
                        {
                            @SuppressWarnings("hiding") Token token = new42(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 0: state = State.NORMAL; break;
                            }
                            return token;
                        }
                    case 43:
                        {
                            @SuppressWarnings("hiding") Token token = new43(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 44:
                        {
                            @SuppressWarnings("hiding") Token token = new44(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 45:
                        {
                            @SuppressWarnings("hiding") Token token = new45(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 46:
                        {
                            @SuppressWarnings("hiding") Token token = new46(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 47:
                        {
                            @SuppressWarnings("hiding") Token token = new47(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 48:
                        {
                            @SuppressWarnings("hiding") Token token = new48(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 49:
                        {
                            @SuppressWarnings("hiding") Token token = new49(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 50:
                        {
                            @SuppressWarnings("hiding") Token token = new50(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 51:
                        {
                            @SuppressWarnings("hiding") Token token = new51(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 52:
                        {
                            @SuppressWarnings("hiding") Token token = new52(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 53:
                        {
                            @SuppressWarnings("hiding") Token token = new53(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 54:
                        {
                            @SuppressWarnings("hiding") Token token = new54(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 55:
                        {
                            @SuppressWarnings("hiding") Token token = new55(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 56:
                        {
                            @SuppressWarnings("hiding") Token token = new56(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 57:
                        {
                            @SuppressWarnings("hiding") Token token = new57(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 58:
                        {
                            @SuppressWarnings("hiding") Token token = new58(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 59:
                        {
                            @SuppressWarnings("hiding") Token token = new59(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 60:
                        {
                            @SuppressWarnings("hiding") Token token = new60(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 61:
                        {
                            @SuppressWarnings("hiding") Token token = new61(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 62:
                        {
                            @SuppressWarnings("hiding") Token token = new62(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 63:
                        {
                            @SuppressWarnings("hiding") Token token = new63(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    }
                }
                else
                {
                    if(this.text.length() > 0)
                    {
                        throw new LexerException(
                            new InvalidToken(this.text.substring(0, 1), start_line + 1, start_pos + 1),
                            "[" + (start_line + 1) + "," + (start_pos + 1) + "]" +
                            " Unknown token: " + this.text);
                    }

                    @SuppressWarnings("hiding") EOF token = new EOF(
                        start_line + 1,
                        start_pos + 1);
                    return token;
                }
            }
        }
    }

    Token new0(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TPrograma(line, pos); }
    Token new1(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TInicio(line, pos); }
    Token new2(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TFimPrograma(line, pos); }
    Token new3(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TSe(line, pos); }
    Token new4(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TEntao(line, pos); }
    Token new5(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TSenao(line, pos); }
    Token new6(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TFimSe(line, pos); }
    Token new7(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TEnquanto(line, pos); }
    Token new8(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TFaca(line, pos); }
    Token new9(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TFimEnquanto(line, pos); }
    Token new10(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TPara(line, pos); }
    Token new11(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TPasso(line, pos); }
    Token new12(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TDe(line, pos); }
    Token new13(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TFimPara(line, pos); }
    Token new14(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TRepita(line, pos); }
    Token new15(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TAte(line, pos); }
    Token new16(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TAvalie(line, pos); }
    Token new17(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TFimAvalie(line, pos); }
    Token new18(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TCaso(line, pos); }
    Token new19(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TVerdadeiro(line, pos); }
    Token new20(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TFalso(line, pos); }
    Token new21(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TLeia(line, pos); }
    Token new22(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TEscreva(line, pos); }
    Token new23(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TInteiro(line, pos); }
    Token new24(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TCaractere(line, pos); }
    Token new25(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TReal(line, pos); }
    Token new26(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TBooleano(line, pos); }
    Token new27(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TConst(line, pos); }
    Token new28(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TNao(line, pos); }
    Token new29(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TE(line, pos); }
    Token new30(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TOu(line, pos); }
    Token new31(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TXor(line, pos); }
    Token new32(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TId(text, line, pos); }
    Token new33(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TString(text, line, pos); }
    Token new34(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TNum(text, line, pos); }
    Token new35(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TNumreal(text, line, pos); }
    Token new36(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TBlank(text, line, pos); }
    Token new37(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TComentarioBloco(line, pos); }
    Token new38(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TComentarioCorpo(text, line, pos); }
    Token new39(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TComentarioFimBloco(line, pos); }
    Token new40(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TEstrela(line, pos); }
    Token new41(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TBarra(line, pos); }
    Token new42(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TComentarioLinha(text, line, pos); }
    Token new43(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TDoisPontos(line, pos); }
    Token new44(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TPontoEVirg(line, pos); }
    Token new45(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TVirg(line, pos); }
    Token new46(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TAParentese(line, pos); }
    Token new47(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TFParentese(line, pos); }
    Token new48(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TAColchete(line, pos); }
    Token new49(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TFColchete(line, pos); }
    Token new50(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TAspasDuplas(line, pos); }
    Token new51(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TSublinhado(text, line, pos); }
    Token new52(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TMais(line, pos); }
    Token new53(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TMenos(line, pos); }
    Token new54(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TMult(line, pos); }
    Token new55(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TDiv(line, pos); }
    Token new56(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TMod(line, pos); }
    Token new57(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TMaiorq(line, pos); }
    Token new58(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TMenorq(line, pos); }
    Token new59(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TMenorOuIgualQ(line, pos); }
    Token new60(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TMaiorOuIgualQ(line, pos); }
    Token new61(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TIgual(line, pos); }
    Token new62(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TDiferente(line, pos); }
    Token new63(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TAtrib(line, pos); }

    private int getChar() throws IOException
    {
        if(this.eof)
        {
            return -1;
        }

        int result = this.in.read();

        if(result == -1)
        {
            this.eof = true;
        }

        return result;
    }

    private void pushBack(int acceptLength) throws IOException
    {
        int length = this.text.length();
        for(int i = length - 1; i >= acceptLength; i--)
        {
            this.eof = false;

            this.in.unread(this.text.charAt(i));
        }
    }

    protected void unread(@SuppressWarnings("hiding") Token token) throws IOException
    {
        @SuppressWarnings("hiding") String text = token.getText();
        int length = text.length();

        for(int i = length - 1; i >= 0; i--)
        {
            this.eof = false;

            this.in.unread(text.charAt(i));
        }

        this.pos = token.getPos() - 1;
        this.line = token.getLine() - 1;
    }

    private String getText(int acceptLength)
    {
        StringBuffer s = new StringBuffer(acceptLength);
        for(int i = 0; i < acceptLength; i++)
        {
            s.append(this.text.charAt(i));
        }

        return s.toString();
    }

    private static int[][][][] gotoTable;
/*  {
        { // NORMAL
            {{9, 9, 1}, {10, 10, 2}, {13, 13, 3}, {32, 32, 4}, {34, 34, 5}, {37, 37, 6}, {39, 39, 7}, {40, 40, 8}, {41, 41, 9}, {42, 42, 10}, {43, 43, 11}, {44, 44, 12}, {45, 45, 13}, {47, 47, 14}, {48, 57, 15}, {58, 58, 16}, {59, 59, 17}, {60, 60, 18}, {61, 61, 19}, {62, 62, 20}, {65, 90, 21}, {91, 91, 22}, {93, 93, 23}, {95, 95, 24}, {97, 97, 25}, {98, 98, 26}, {99, 99, 27}, {100, 100, 28}, {101, 101, 29}, {102, 102, 30}, {103, 104, 31}, {105, 105, 32}, {106, 107, 31}, {108, 108, 33}, {109, 109, 31}, {110, 110, 34}, {111, 111, 35}, {112, 112, 36}, {113, 113, 31}, {114, 114, 37}, {115, 115, 38}, {116, 117, 31}, {118, 118, 39}, {119, 119, 31}, {120, 120, 40}, {121, 122, 31}, },
            {{9, 32, -2}, },
            {{9, 10, -2}, {13, 13, 41}, {32, 32, 4}, },
            {{9, 32, -2}, },
            {{9, 32, -2}, },
            {},
            {},
            {{0, 9, 42}, {11, 38, 42}, {39, 39, 43}, {40, 65535, 42}, },
            {},
            {},
            {{47, 47, 44}, },
            {},
            {},
            {},
            {{42, 42, 45}, {47, 47, 46}, },
            {{44, 44, 47}, {48, 57, 15}, },
            {{61, 61, 48}, },
            {},
            {{61, 61, 49}, {62, 62, 50}, },
            {},
            {{61, 61, 51}, },
            {{48, 57, 52}, {65, 90, 53}, {95, 95, 54}, {97, 122, 55}, },
            {},
            {},
            {{48, 57, 52}, {65, 90, 56}, {95, 95, 54}, {97, 122, 57}, },
            {{48, 95, -23}, {97, 115, 55}, {116, 116, 58}, {117, 117, 55}, {118, 118, 59}, {119, 122, 55}, },
            {{48, 95, -23}, {97, 110, 55}, {111, 111, 60}, {112, 122, 55}, },
            {{48, 95, -23}, {97, 97, 61}, {98, 110, 55}, {111, 111, 62}, {112, 122, 55}, },
            {{48, 95, -23}, {97, 100, 55}, {101, 101, 63}, {102, 122, 55}, },
            {{48, 95, -23}, {97, 109, 55}, {110, 110, 64}, {111, 114, 55}, {115, 115, 65}, {116, 122, 55}, },
            {{48, 95, -23}, {97, 97, 66}, {98, 104, 55}, {105, 105, 67}, {106, 122, 55}, },
            {{48, 122, -23}, },
            {{48, 109, -31}, {110, 110, 68}, {111, 122, 55}, },
            {{48, 100, -30}, {101, 101, 69}, {102, 122, 55}, },
            {{48, 95, -23}, {97, 97, 70}, {98, 122, 55}, },
            {{48, 95, -23}, {97, 116, 55}, {117, 117, 71}, {118, 122, 55}, },
            {{48, 95, -23}, {97, 97, 72}, {98, 113, 55}, {114, 114, 73}, {115, 122, 55}, },
            {{48, 100, -30}, {101, 101, 74}, {102, 122, 55}, },
            {{48, 100, -30}, {101, 101, 75}, {102, 122, 55}, },
            {{48, 100, -30}, {101, 101, 76}, {102, 122, 55}, },
            {{48, 110, -28}, {111, 111, 77}, {112, 122, 55}, },
            {{9, 32, -2}, },
            {{0, 65535, -9}, },
            {},
            {},
            {},
            {{32, 255, 78}, },
            {{48, 57, 79}, },
            {},
            {},
            {},
            {},
            {{48, 122, -26}, },
            {{48, 122, -23}, },
            {{48, 122, -26}, },
            {{48, 122, -23}, },
            {{48, 122, -26}, },
            {{48, 122, -26}, },
            {{48, 100, -30}, {101, 101, 80}, {102, 122, 55}, },
            {{48, 95, -23}, {97, 97, 81}, {98, 122, 55}, },
            {{48, 110, -28}, {111, 111, 82}, {112, 122, 55}, },
            {{48, 95, -23}, {97, 113, 55}, {114, 114, 83}, {115, 115, 84}, {116, 122, 55}, },
            {{48, 109, -31}, {110, 110, 85}, {111, 122, 55}, },
            {{48, 122, -23}, },
            {{48, 95, -23}, {97, 112, 55}, {113, 113, 86}, {114, 115, 55}, {116, 116, 87}, {117, 122, 55}, },
            {{48, 95, -23}, {97, 98, 55}, {99, 99, 88}, {100, 122, 55}, },
            {{48, 98, -67}, {99, 99, 89}, {100, 107, 55}, {108, 108, 90}, {109, 122, 55}, },
            {{48, 95, -23}, {97, 108, 55}, {109, 109, 91}, {110, 122, 55}, },
            {{48, 95, -23}, {97, 104, 55}, {105, 105, 92}, {106, 115, 55}, {116, 116, 93}, {117, 122, 55}, },
            {{48, 104, -70}, {105, 105, 94}, {106, 122, 55}, },
            {{48, 110, -28}, {111, 111, 95}, {112, 122, 55}, },
            {{48, 122, -23}, },
            {{48, 113, -63}, {114, 114, 96}, {115, 115, 97}, {116, 122, 55}, },
            {{48, 110, -28}, {111, 111, 98}, {112, 122, 55}, },
            {{48, 95, -23}, {97, 97, 99}, {98, 111, 55}, {112, 112, 100}, {113, 122, 55}, },
            {{48, 109, -31}, {110, 110, 101}, {111, 122, 55}, },
            {{48, 113, -63}, {114, 114, 102}, {115, 122, 55}, },
            {{48, 113, -63}, {114, 114, 103}, {115, 122, 55}, },
            {{32, 255, 78}, },
            {{48, 57, 79}, },
            {{48, 122, -23}, },
            {{48, 95, -23}, {97, 107, 55}, {108, 108, 104}, {109, 122, 55}, },
            {{48, 107, -83}, {108, 108, 105}, {109, 122, 55}, },
            {{48, 95, -23}, {97, 97, 106}, {98, 122, 55}, },
            {{48, 110, -28}, {111, 111, 107}, {112, 122, 55}, },
            {{48, 95, -23}, {97, 114, 55}, {115, 115, 108}, {116, 122, 55}, },
            {{48, 116, -37}, {117, 117, 109}, {118, 122, 55}, },
            {{48, 95, -23}, {97, 97, 110}, {98, 122, 55}, },
            {{48, 113, -63}, {114, 114, 111}, {115, 122, 55}, },
            {{48, 95, -23}, {97, 97, 112}, {98, 122, 55}, },
            {{48, 114, -87}, {115, 115, 113}, {116, 122, 55}, },
            {{32, 32, 114}, {46, 46, 115}, {48, 122, -23}, },
            {{48, 98, -67}, {99, 99, 116}, {100, 122, 55}, },
            {{48, 100, -30}, {101, 101, 117}, {102, 122, 55}, },
            {{48, 95, -23}, {97, 97, 118}, {98, 122, 55}, },
            {{48, 122, -23}, },
            {{48, 95, -23}, {97, 97, 119}, {98, 122, 55}, },
            {{48, 114, -87}, {115, 115, 120}, {116, 122, 55}, },
            {{48, 95, -23}, {97, 102, 55}, {103, 103, 121}, {104, 122, 55}, },
            {{48, 107, -83}, {108, 108, 122}, {109, 122, 55}, },
            {{48, 104, -70}, {105, 105, 123}, {106, 122, 55}, },
            {{48, 95, -23}, {97, 97, 124}, {98, 122, 55}, },
            {{48, 95, -23}, {97, 99, 55}, {100, 100, 125}, {101, 122, 55}, },
            {{48, 122, -23}, },
            {{48, 104, -70}, {105, 105, 126}, {106, 122, 55}, },
            {{48, 100, -30}, {101, 101, 127}, {102, 122, 55}, },
            {{48, 98, -67}, {99, 99, 128}, {100, 122, 55}, },
            {{48, 122, -23}, },
            {{48, 115, -27}, {116, 116, 129}, {117, 122, 55}, },
            {{48, 95, -23}, {97, 97, 130}, {98, 122, 55}, },
            {{48, 110, -28}, {111, 111, 131}, {112, 122, 55}, },
            {{48, 100, -30}, {101, 101, 132}, {102, 122, 55}, },
            {{48, 122, -23}, },
            {{48, 110, -28}, {111, 111, 133}, {112, 122, 55}, },
            {{97, 97, 134}, {101, 101, 135}, {112, 112, 136}, {115, 115, 137}, },
            {},
            {{48, 104, -70}, {105, 105, 138}, {106, 122, 55}, },
            {{48, 104, -70}, {105, 105, 139}, {106, 122, 55}, },
            {{48, 122, -23}, },
            {{48, 122, -23}, },
            {{48, 110, -28}, {111, 111, 140}, {112, 122, 55}, },
            {{48, 113, -63}, {114, 114, 141}, {115, 122, 55}, },
            {{48, 122, -23}, },
            {{48, 115, -27}, {116, 116, 142}, {117, 122, 55}, },
            {{48, 110, -28}, {111, 111, 143}, {112, 122, 55}, },
            {{48, 95, -23}, {97, 97, 144}, {98, 122, 55}, },
            {{48, 100, -30}, {101, 101, 145}, {102, 122, 55}, },
            {{48, 95, -23}, {97, 97, 146}, {98, 122, 55}, },
            {{48, 115, -27}, {116, 116, 147}, {117, 122, 55}, },
            {{48, 122, -23}, },
            {{48, 109, -31}, {110, 110, 148}, {111, 122, 55}, },
            {{48, 122, -23}, },
            {{48, 95, -23}, {97, 117, 55}, {118, 118, 149}, {119, 122, 55}, },
            {{48, 122, -23}, },
            {{118, 118, 150}, },
            {{110, 110, 151}, },
            {{97, 97, 152}, },
            {{101, 101, 153}, },
            {{48, 110, -28}, {111, 111, 154}, {112, 122, 55}, },
            {{48, 113, -63}, {114, 114, 155}, {115, 122, 55}, },
            {{48, 122, -23}, },
            {{48, 95, -23}, {97, 97, 156}, {98, 122, 55}, },
            {{48, 95, -23}, {97, 97, 157}, {98, 122, 55}, },
            {{48, 122, -23}, },
            {{48, 99, -104}, {100, 100, 158}, {101, 122, 55}, },
            {{48, 122, -23}, },
            {{48, 109, -31}, {110, 110, 159}, {111, 122, 55}, },
            {{48, 100, -30}, {101, 101, 160}, {102, 122, 55}, },
            {{48, 115, -27}, {116, 116, 161}, {117, 122, 55}, },
            {{48, 95, -23}, {97, 97, 162}, {98, 122, 55}, },
            {{97, 97, 163}, },
            {{113, 113, 164}, },
            {{114, 114, 165}, },
            {},
            {{48, 122, -23}, },
            {{48, 110, -28}, {111, 111, 166}, {112, 122, 55}, },
            {{48, 108, -69}, {109, 109, 167}, {110, 122, 55}, },
            {{48, 122, -23}, },
            {{48, 100, -30}, {101, 101, 168}, {102, 122, 55}, },
            {{48, 110, -28}, {111, 111, 169}, {112, 122, 55}, },
            {{48, 113, -63}, {114, 114, 170}, {115, 122, 55}, },
            {{48, 110, -28}, {111, 111, 171}, {112, 122, 55}, },
            {{48, 122, -23}, },
            {{108, 108, 172}, },
            {{117, 117, 173}, },
            {{97, 97, 174}, },
            {{48, 122, -23}, },
            {{48, 95, -23}, {97, 97, 175}, {98, 122, 55}, },
            {{48, 104, -70}, {105, 105, 176}, {106, 122, 55}, },
            {{48, 122, -23}, },
            {{48, 100, -30}, {101, 101, 177}, {102, 122, 55}, },
            {{48, 122, -23}, },
            {{105, 105, 178}, },
            {{97, 97, 179}, },
            {},
            {{48, 122, -23}, },
            {{48, 113, -63}, {114, 114, 180}, {115, 122, 55}, },
            {{48, 122, -23}, },
            {{101, 101, 181}, },
            {{110, 110, 182}, },
            {{48, 110, -28}, {111, 111, 183}, {112, 122, 55}, },
            {},
            {{116, 116, 184}, },
            {{48, 122, -23}, },
            {{111, 111, 185}, },
            {},
        }
        { // COMENTARIO
            {{0, 8, 1}, {9, 9, 2}, {10, 10, 3}, {11, 12, 1}, {13, 13, 4}, {14, 31, 1}, {32, 32, 5}, {33, 33, 1}, {34, 34, 6}, {35, 36, 1}, {37, 37, 7}, {38, 38, 1}, {39, 39, 8}, {40, 40, 9}, {41, 41, 10}, {42, 42, 11}, {43, 43, 12}, {44, 44, 13}, {45, 45, 14}, {46, 46, 1}, {47, 47, 15}, {48, 57, 16}, {58, 58, 17}, {59, 59, 18}, {60, 60, 19}, {61, 61, 20}, {62, 62, 21}, {63, 64, 1}, {65, 90, 22}, {91, 91, 23}, {92, 92, 1}, {93, 93, 24}, {94, 94, 1}, {95, 95, 25}, {96, 96, 1}, {97, 97, 26}, {98, 98, 27}, {99, 99, 28}, {100, 100, 29}, {101, 101, 30}, {102, 102, 31}, {103, 104, 32}, {105, 105, 33}, {106, 107, 32}, {108, 108, 34}, {109, 109, 32}, {110, 110, 35}, {111, 111, 36}, {112, 112, 37}, {113, 113, 32}, {114, 114, 38}, {115, 115, 39}, {116, 117, 32}, {118, 118, 40}, {119, 119, 32}, {120, 120, 41}, {121, 122, 32}, {123, 65535, 1}, },
            {{0, 41, 1}, {43, 46, 1}, {48, 65535, 1}, },
            {{0, 32, -2}, {33, 41, 1}, {43, 65535, -3}, },
            {{0, 12, -2}, {13, 13, 42}, {14, 65535, -4}, },
            {{0, 65535, -4}, },
            {{0, 65535, -4}, },
            {{0, 65535, -3}, },
            {{0, 65535, -3}, },
            {{0, 9, 43}, {10, 10, 1}, {11, 38, 43}, {39, 39, 44}, {40, 41, 43}, {42, 42, 45}, {43, 46, 43}, {47, 47, 45}, {48, 65535, 43}, },
            {{0, 65535, -3}, },
            {{0, 65535, -3}, },
            {{47, 47, 46}, },
            {{0, 65535, -3}, },
            {{0, 65535, -3}, },
            {{0, 65535, -3}, },
            {{42, 42, 47}, },
            {{0, 41, 1}, {43, 43, 1}, {44, 44, 48}, {45, 46, 1}, {48, 57, 16}, {58, 65535, 1}, },
            {{0, 46, -3}, {48, 60, 1}, {61, 61, 49}, {62, 65535, 1}, },
            {{0, 65535, -3}, },
            {{0, 60, -19}, {61, 61, 50}, {62, 62, 51}, {63, 65535, 1}, },
            {{0, 65535, -3}, },
            {{0, 60, -19}, {61, 61, 52}, {62, 65535, 1}, },
            {{0, 46, -3}, {48, 57, 53}, {58, 64, 1}, {65, 90, 54}, {91, 94, 1}, {95, 95, 55}, {96, 96, 1}, {97, 122, 56}, {123, 65535, 1}, },
            {{0, 65535, -3}, },
            {{0, 65535, -3}, },
            {{0, 64, -24}, {65, 90, 57}, {91, 96, -24}, {97, 122, 58}, {123, 65535, 1}, },
            {{0, 96, -24}, {97, 115, 56}, {116, 116, 59}, {117, 117, 56}, {118, 118, 60}, {119, 122, 56}, {123, 65535, 1}, },
            {{0, 96, -24}, {97, 110, 56}, {111, 111, 61}, {112, 122, 56}, {123, 65535, 1}, },
            {{0, 96, -24}, {97, 97, 62}, {98, 110, 56}, {111, 111, 63}, {112, 65535, -29}, },
            {{0, 96, -24}, {97, 100, 56}, {101, 101, 64}, {102, 122, 56}, {123, 65535, 1}, },
            {{0, 96, -24}, {97, 109, 56}, {110, 110, 65}, {111, 114, 56}, {115, 115, 66}, {116, 122, 56}, {123, 65535, 1}, },
            {{0, 96, -24}, {97, 97, 67}, {98, 104, 56}, {105, 105, 68}, {106, 122, 56}, {123, 65535, 1}, },
            {{0, 65535, -24}, },
            {{0, 109, -32}, {110, 110, 69}, {111, 122, 56}, {123, 65535, 1}, },
            {{0, 100, -31}, {101, 101, 70}, {102, 65535, -31}, },
            {{0, 96, -24}, {97, 97, 71}, {98, 122, 56}, {123, 65535, 1}, },
            {{0, 96, -24}, {97, 116, 56}, {117, 117, 72}, {118, 122, 56}, {123, 65535, 1}, },
            {{0, 96, -24}, {97, 97, 73}, {98, 113, 56}, {114, 114, 74}, {115, 122, 56}, {123, 65535, 1}, },
            {{0, 100, -31}, {101, 101, 75}, {102, 65535, -31}, },
            {{0, 100, -31}, {101, 101, 76}, {102, 65535, -31}, },
            {{0, 100, -31}, {101, 101, 77}, {102, 65535, -31}, },
            {{0, 110, -29}, {111, 111, 78}, {112, 65535, -29}, },
            {{0, 65535, -4}, },
            {{0, 65535, -10}, },
            {{0, 65535, -3}, },
            {{0, 9, 45}, {11, 38, 45}, {39, 39, 79}, {40, 65535, 45}, },
            {},
            {},
            {{0, 46, -3}, {48, 57, 80}, {58, 65535, 1}, },
            {{0, 65535, -3}, },
            {{0, 65535, -3}, },
            {{0, 65535, -3}, },
            {{0, 65535, -3}, },
            {{0, 65535, -27}, },
            {{0, 65535, -24}, },
            {{0, 65535, -27}, },
            {{0, 65535, -24}, },
            {{0, 65535, -27}, },
            {{0, 65535, -27}, },
            {{0, 100, -31}, {101, 101, 81}, {102, 65535, -31}, },
            {{0, 96, -24}, {97, 97, 82}, {98, 65535, -37}, },
            {{0, 110, -29}, {111, 111, 83}, {112, 65535, -29}, },
            {{0, 96, -24}, {97, 113, 56}, {114, 114, 84}, {115, 115, 85}, {116, 65535, -32}, },
            {{0, 109, -32}, {110, 110, 86}, {111, 65535, -35}, },
            {{0, 65535, -24}, },
            {{0, 96, -24}, {97, 112, 56}, {113, 113, 87}, {114, 115, 56}, {116, 116, 88}, {117, 122, 56}, {123, 65535, 1}, },
            {{0, 96, -24}, {97, 98, 56}, {99, 99, 89}, {100, 122, 56}, {123, 65535, 1}, },
            {{0, 98, -68}, {99, 99, 90}, {100, 107, 56}, {108, 108, 91}, {109, 122, 56}, {123, 65535, 1}, },
            {{0, 96, -24}, {97, 108, 56}, {109, 109, 92}, {110, 122, 56}, {123, 65535, 1}, },
            {{0, 96, -24}, {97, 104, 56}, {105, 105, 93}, {106, 115, 56}, {116, 116, 94}, {117, 65535, -67}, },
            {{0, 104, -71}, {105, 105, 95}, {106, 65535, -33}, },
            {{0, 110, -29}, {111, 111, 96}, {112, 65535, -29}, },
            {{0, 65535, -24}, },
            {{0, 113, -64}, {114, 114, 97}, {115, 115, 98}, {116, 65535, -32}, },
            {{0, 110, -29}, {111, 111, 99}, {112, 65535, -29}, },
            {{0, 96, -24}, {97, 97, 100}, {98, 111, 56}, {112, 112, 101}, {113, 122, 56}, {123, 65535, 1}, },
            {{0, 109, -32}, {110, 110, 102}, {111, 65535, -35}, },
            {{0, 113, -64}, {114, 114, 103}, {115, 65535, -39}, },
            {{0, 113, -64}, {114, 114, 104}, {115, 65535, -39}, },
            {},
            {{0, 65535, -50}, },
            {{0, 65535, -24}, },
            {{0, 96, -24}, {97, 107, 56}, {108, 108, 105}, {109, 65535, -69}, },
            {{0, 107, -84}, {108, 108, 106}, {109, 65535, -69}, },
            {{0, 96, -24}, {97, 97, 107}, {98, 65535, -37}, },
            {{0, 110, -29}, {111, 111, 108}, {112, 65535, -29}, },
            {{0, 96, -24}, {97, 114, 56}, {115, 115, 109}, {116, 65535, -32}, },
            {{0, 116, -38}, {117, 117, 110}, {118, 65535, -38}, },
            {{0, 96, -24}, {97, 97, 111}, {98, 65535, -37}, },
            {{0, 113, -64}, {114, 114, 112}, {115, 65535, -39}, },
            {{0, 96, -24}, {97, 97, 113}, {98, 65535, -37}, },
            {{0, 114, -88}, {115, 115, 114}, {116, 65535, -32}, },
            {{0, 31, 1}, {32, 32, 115}, {33, 41, 1}, {43, 45, 1}, {46, 46, 116}, {48, 65535, -24}, },
            {{0, 98, -68}, {99, 99, 117}, {100, 65535, -68}, },
            {{0, 100, -31}, {101, 101, 118}, {102, 65535, -31}, },
            {{0, 96, -24}, {97, 97, 119}, {98, 65535, -37}, },
            {{0, 65535, -24}, },
            {{0, 96, -24}, {97, 97, 120}, {98, 65535, -37}, },
            {{0, 114, -88}, {115, 115, 121}, {116, 65535, -32}, },
            {{0, 96, -24}, {97, 102, 56}, {103, 103, 122}, {104, 122, 56}, {123, 65535, 1}, },
            {{0, 107, -84}, {108, 108, 123}, {109, 65535, -69}, },
            {{0, 104, -71}, {105, 105, 124}, {106, 65535, -33}, },
            {{0, 96, -24}, {97, 97, 125}, {98, 65535, -37}, },
            {{0, 96, -24}, {97, 99, 56}, {100, 100, 126}, {101, 122, 56}, {123, 65535, 1}, },
            {{0, 65535, -24}, },
            {{0, 104, -71}, {105, 105, 127}, {106, 65535, -33}, },
            {{0, 100, -31}, {101, 101, 128}, {102, 65535, -31}, },
            {{0, 98, -68}, {99, 99, 129}, {100, 65535, -68}, },
            {{0, 65535, -24}, },
            {{0, 115, -28}, {116, 116, 130}, {117, 65535, -67}, },
            {{0, 96, -24}, {97, 97, 131}, {98, 65535, -37}, },
            {{0, 110, -29}, {111, 111, 132}, {112, 65535, -29}, },
            {{0, 100, -31}, {101, 101, 133}, {102, 65535, -31}, },
            {{0, 65535, -24}, },
            {{0, 110, -29}, {111, 111, 134}, {112, 65535, -29}, },
            {{0, 46, -3}, {48, 96, 1}, {97, 97, 135}, {98, 100, 1}, {101, 101, 136}, {102, 111, 1}, {112, 112, 137}, {113, 114, 1}, {115, 115, 138}, {116, 65535, 1}, },
            {{0, 65535, -3}, },
            {{0, 104, -71}, {105, 105, 139}, {106, 65535, -33}, },
            {{0, 104, -71}, {105, 105, 140}, {106, 65535, -33}, },
            {{0, 65535, -24}, },
            {{0, 65535, -24}, },
            {{0, 110, -29}, {111, 111, 141}, {112, 65535, -29}, },
            {{0, 113, -64}, {114, 114, 142}, {115, 65535, -39}, },
            {{0, 65535, -24}, },
            {{0, 115, -28}, {116, 116, 143}, {117, 65535, -67}, },
            {{0, 110, -29}, {111, 111, 144}, {112, 65535, -29}, },
            {{0, 96, -24}, {97, 97, 145}, {98, 65535, -37}, },
            {{0, 100, -31}, {101, 101, 146}, {102, 65535, -31}, },
            {{0, 96, -24}, {97, 97, 147}, {98, 65535, -37}, },
            {{0, 115, -28}, {116, 116, 148}, {117, 65535, -67}, },
            {{0, 65535, -24}, },
            {{0, 109, -32}, {110, 110, 149}, {111, 65535, -35}, },
            {{0, 65535, -24}, },
            {{0, 96, -24}, {97, 117, 56}, {118, 118, 150}, {119, 65535, -28}, },
            {{0, 65535, -24}, },
            {{0, 46, -3}, {48, 117, 1}, {118, 118, 151}, {119, 65535, 1}, },
            {{0, 46, -3}, {48, 109, 1}, {110, 110, 152}, {111, 65535, 1}, },
            {{0, 96, -117}, {97, 97, 153}, {98, 65535, 1}, },
            {{0, 46, -3}, {48, 100, 1}, {101, 101, 154}, {102, 65535, 1}, },
            {{0, 110, -29}, {111, 111, 155}, {112, 65535, -29}, },
            {{0, 113, -64}, {114, 114, 156}, {115, 65535, -39}, },
            {{0, 65535, -24}, },
            {{0, 96, -24}, {97, 97, 157}, {98, 65535, -37}, },
            {{0, 96, -24}, {97, 97, 158}, {98, 65535, -37}, },
            {{0, 65535, -24}, },
            {{0, 99, -105}, {100, 100, 159}, {101, 65535, -105}, },
            {{0, 65535, -24}, },
            {{0, 109, -32}, {110, 110, 160}, {111, 65535, -35}, },
            {{0, 100, -31}, {101, 101, 161}, {102, 65535, -31}, },
            {{0, 115, -28}, {116, 116, 162}, {117, 65535, -67}, },
            {{0, 96, -24}, {97, 97, 163}, {98, 65535, -37}, },
            {{0, 96, -117}, {97, 97, 164}, {98, 65535, 1}, },
            {{0, 46, -3}, {48, 112, 1}, {113, 113, 165}, {114, 65535, 1}, },
            {{0, 46, -3}, {48, 113, 1}, {114, 114, 166}, {115, 65535, 1}, },
            {{0, 65535, -3}, },
            {{0, 65535, -24}, },
            {{0, 110, -29}, {111, 111, 167}, {112, 65535, -29}, },
            {{0, 108, -70}, {109, 109, 168}, {110, 65535, -70}, },
            {{0, 65535, -24}, },
            {{0, 100, -31}, {101, 101, 169}, {102, 65535, -31}, },
            {{0, 110, -29}, {111, 111, 170}, {112, 65535, -29}, },
            {{0, 113, -64}, {114, 114, 171}, {115, 65535, -39}, },
            {{0, 110, -29}, {111, 111, 172}, {112, 65535, -29}, },
            {{0, 65535, -24}, },
            {{0, 46, -3}, {48, 107, 1}, {108, 108, 173}, {109, 65535, 1}, },
            {{0, 46, -3}, {48, 116, 1}, {117, 117, 174}, {118, 65535, 1}, },
            {{0, 96, -117}, {97, 97, 175}, {98, 65535, 1}, },
            {{0, 65535, -24}, },
            {{0, 96, -24}, {97, 97, 176}, {98, 65535, -37}, },
            {{0, 104, -71}, {105, 105, 177}, {106, 65535, -33}, },
            {{0, 65535, -24}, },
            {{0, 100, -31}, {101, 101, 178}, {102, 65535, -31}, },
            {{0, 65535, -24}, },
            {{0, 46, -3}, {48, 104, 1}, {105, 105, 179}, {106, 65535, 1}, },
            {{0, 96, -117}, {97, 97, 180}, {98, 65535, 1}, },
            {{0, 65535, -3}, },
            {{0, 65535, -24}, },
            {{0, 113, -64}, {114, 114, 181}, {115, 65535, -39}, },
            {{0, 65535, -24}, },
            {{0, 100, -140}, {101, 101, 182}, {102, 65535, 1}, },
            {{0, 109, -138}, {110, 110, 183}, {111, 65535, 1}, },
            {{0, 110, -29}, {111, 111, 184}, {112, 65535, -29}, },
            {{0, 65535, -3}, },
            {{0, 46, -3}, {48, 115, 1}, {116, 116, 185}, {117, 65535, 1}, },
            {{0, 65535, -24}, },
            {{0, 46, -3}, {48, 110, 1}, {111, 111, 186}, {112, 65535, 1}, },
            {{0, 65535, -3}, },
        }
    };*/

    private static int[][] accept;
/*  {
        // NORMAL
        {-1, 36, 36, 36, 36, 50, 56, -1, 46, 47, 54, 52, 45, 53, 55, 34, 43, 44, 58, 61, 57, 32, 48, 49, 32, 32, 32, 32, 32, 29, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 36, -1, 33, 39, 37, 42, -1, 63, 59, 62, 60, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 12, 32, 32, 32, 32, 32, 32, 32, 30, 32, 32, 32, 3, 32, 32, 42, 35, 15, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 28, 32, 32, 32, 32, 32, 32, 32, 31, 32, 32, 32, 18, 32, 32, 32, 32, 8, 32, -1, 2, 32, 32, 21, 10, 32, 32, 25, 32, 32, 32, 32, 32, 32, 27, 32, 4, 32, 20, -1, -1, -1, -1, 32, 32, 11, 32, 32, 5, 32, 16, 32, 32, 32, 32, -1, -1, -1, 6, 1, 32, 32, 14, 32, 32, 32, 32, 22, -1, -1, -1, 23, 32, 32, 26, 32, 7, -1, -1, 13, 0, 32, 24, -1, -1, 32, 17, -1, 19, -1, 9, },
        // COMENTARIO
        {38, 38, 36, 36, 36, 36, 38, 38, 38, 38, 38, 40, 38, 38, 38, 41, 34, 38, 38, 38, 38, 38, 32, 38, 38, 32, 32, 32, 32, 32, 29, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 36, 38, 33, -1, 39, 37, 38, 38, 38, 38, 38, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 12, 32, 32, 32, 32, 32, 32, 32, 30, 32, 32, 32, 3, 32, 32, 33, 35, 15, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 28, 32, 32, 32, 32, 32, 32, 32, 31, 32, 32, 32, 18, 32, 32, 32, 32, 8, 32, 38, 2, 32, 32, 21, 10, 32, 32, 25, 32, 32, 32, 32, 32, 32, 27, 32, 4, 32, 20, 38, 38, 38, 38, 32, 32, 11, 32, 32, 5, 32, 16, 32, 32, 32, 32, 38, 38, 38, 6, 1, 32, 32, 14, 32, 32, 32, 32, 22, 38, 38, 38, 23, 32, 32, 26, 32, 7, 38, 38, 13, 0, 32, 24, 38, 38, 32, 17, 38, 19, 38, 9, },

    };*/

    public static class State
    {
        public final static State NORMAL = new State(0);
        public final static State COMENTARIO = new State(1);

        private int id;

        private State(@SuppressWarnings("hiding") int id)
        {
            this.id = id;
        }

        public int id()
        {
            return this.id;
        }
    }

    static 
    {
        try
        {
            DataInputStream s = new DataInputStream(
                new BufferedInputStream(
                Lexer.class.getResourceAsStream("lexer.dat")));

            // read gotoTable
            int length = s.readInt();
            gotoTable = new int[length][][][];
            for(int i = 0; i < gotoTable.length; i++)
            {
                length = s.readInt();
                gotoTable[i] = new int[length][][];
                for(int j = 0; j < gotoTable[i].length; j++)
                {
                    length = s.readInt();
                    gotoTable[i][j] = new int[length][3];
                    for(int k = 0; k < gotoTable[i][j].length; k++)
                    {
                        for(int l = 0; l < 3; l++)
                        {
                            gotoTable[i][j][k][l] = s.readInt();
                        }
                    }
                }
            }

            // read accept
            length = s.readInt();
            accept = new int[length][];
            for(int i = 0; i < accept.length; i++)
            {
                length = s.readInt();
                accept[i] = new int[length];
                for(int j = 0; j < accept[i].length; j++)
                {
                    accept[i][j] = s.readInt();
                }
            }

            s.close();
        }
        catch(Exception e)
        {
            throw new RuntimeException("The file \"lexer.dat\" is either missing or corrupted.");
        }
    }
}
